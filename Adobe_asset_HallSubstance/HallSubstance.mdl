mdl 1.3;

import ::adobe::mtl::standard;
import ::anno::*;
import ::base::file_texture;
import ::base::mono_mode;
import ::base::rotation_translation_scale;
import ::base::tangent_space_normal_texture;
import ::base::texture_coordinate_info;
import ::base::texture_return;
import ::base::transform_coordinate;
import ::state::texture_coordinate;
import ::state::texture_tangent_u;
import ::state::texture_tangent_v;
import ::tex::gamma_mode;
import ::tex::wrap_mode;
import ::state::normal;


export material MATERIAL_CONSOLANDFLOORTANKSM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("ConsolandFloorTanksM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("ConsolandFloorTanksM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("ConsolandFloorTanksM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("ConsolandFloorTanksM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_DEADWOODM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("DeadWoodM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("DeadWoodM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("DeadWoodM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("DeadWoodM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_FALLENLAMPS1(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("FallenLamps1_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("FallenLamps1_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("FallenLamps1_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("FallenLamps1_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_FLOORM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("FloorM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("FloorM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("FloorM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("FloorM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_HALLM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("HallM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("HallM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("HallM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("HallM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_IVYM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("IVyM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("IVyM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("IVyM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("IVyM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_LAMPM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("LampM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("LampM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("LampM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("LampM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_LAMPPORTM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("LampPortM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("LampPortM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("LampPortM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("LampPortM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_PIPES1(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("Pipes1_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("Pipes1_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("Pipes1_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("Pipes1_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SHELVESM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("ShelvesM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("ShelvesM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("ShelvesM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("ShelvesM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SKY(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("Sky_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("Sky_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("Sky_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("Sky_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SKYLIGHTGLASSM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("SkylightGlassM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("SkylightGlassM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("SkylightGlassM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
opacity: ::base::file_texture(
	texture: texture_2d("SkylightGlassM_opacity.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("SkylightGlassM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_SKYLIGHTM(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("SkyLightM_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("SkyLightM_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("SkyLightM_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("SkyLightM_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);


export material MATERIAL_TREEBARK(*)
= ::adobe::mtl::standard(
	baseColor: ::base::file_texture(
	texture: texture_2d("TreeBark_baseColor.png", ::tex::gamma_srgb),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).tint,
metallic: ::base::file_texture(
	texture: texture_2d("TreeBark_metallic.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
roughness: ::base::file_texture(
	texture: texture_2d("TreeBark_roughness.png", ::tex::gamma_linear),
	color_offset: color(0.f, 0.f, 0.f),
	color_scale: color(1.f, 1.f, 1.f),
	mono_source: ::base::mono_average,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false
).mono,
normal: ::base::tangent_space_normal_texture(
	texture: texture_2d("TreeBark_normal.png", ::tex::gamma_linear),
	factor: 1.f,
	flip_tangent_u: false,
	flip_tangent_v: false,
	uvw: ::base::transform_coordinate(
		::base::rotation_translation_scale(float3(0.f), float3(0.f), float3(1.f)),
		::base::texture_coordinate_info(::state::texture_coordinate(0), ::state::texture_tangent_u(0), ::state::texture_tangent_v(0))
	),
	crop_u: float2(0.f, 1.f),
	crop_v: float2(0.f, 1.f),
	wrap_u: ::tex::wrap_repeat,
	wrap_v: ::tex::wrap_repeat,
	clip: false,
	scale: 1.f,
	offset: 1.f
)
);

